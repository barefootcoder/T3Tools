#! /usr/bin/perl -w

use strict;

use Barefoot::debug(1);

use Carp;
use Date::Parse;

use Barefoot;
use Barefoot::format;


use constant SIMPLE_FORMAT => '@<< @|| @>> @#.##';
use constant SIMPLE_FORMAT_RESULT => "A    B    C 12.35";

use constant MLINE_FORMAT => 'Test: ^<<<<<<<<<<<<<<<<<<&'
		. "\n" . '~~    ^<<<<<<<<<<<<<<<<<<<' . "\n";
use constant MLINE_FORMAT_RESULT => "Test: this is a test of\n"
		. "      some very long text\n      that even has some\n"
		. "      embedded newlines in\n      it.  hopefully this\n"
		. "      will work.\n";

my $mline_text = <<END;
this is a test of some very long text that even has some embedded newlines
in it.  hopefully this will work.
END


# test swrite()
test_format("simple format test",
		swrite(SIMPLE_FORMAT, qw<A B C>, 12.345), SIMPLE_FORMAT_RESULT);
test_format("multiline format test",
		swrite(MLINE_FORMAT, $mline_text), MLINE_FORMAT_RESULT);

# test writeln()
my $testfile = "format.tst";
select TEST;

open(TEST, ">$testfile") or die("can't create file for testing");
writeln(SIMPLE_FORMAT, qw<A B C>, 12.345);
close(TEST);
test_format("writeln ^ test", `cat $testfile`, SIMPLE_FORMAT_RESULT . "\n");

open(TEST, ">$testfile") or die("can't create file for testing");
writeln('~~^' . '<' x 20, $mline_text);
close(TEST);
test_format("writeln test", scalar `cat $testfile`, <<END);
  this is a test of
  some very long text
  that even has some
  embedded newlines in
  it.  hopefully this
  will work.
END

unlink($testfile);
select STDOUT;

# test ignoring of undef values
{
	local $SIG{__WARN__} = sub { die $_[0] };

	test_format("undef test",
			swrite('@<< @<< @<<', "xxx", undef, "zzz"), "xxx     zzz");
}

# test date formats
my $datetime = str2time("5/7/1997 14:23");
test_format("simple date test",
		swrite('@m/@d/@yyy', $datetime), " 5/ 7/1997");
test_format("mixed date test",
		swrite('@ww @m/#d/@yyy', $datetime, $datetime), "Wed  5/07/1997");


# everything looks good
print "ALL TESTS PASSED\n";


sub test_format
{
	my ($msg, $formatted, $expected) = @_;

	unless ($formatted eq $expected)
	{
		print STDERR "$msg: wanted [[$expected]], got [[$formatted]]\n"
				if DEBUG >= 2;
		die("failed $msg");
	}
}
