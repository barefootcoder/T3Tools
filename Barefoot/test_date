#! /usr/bin/perl -w

use strict;

use Barefoot::debug(1);

use Barefoot::base;
use Barefoot::date;


# test valid date formats
die("failed valid test") unless date::isValid("12/31/01");
die("failed valid test") unless date::isValid("12/31/2001");
die("failed valid test") unless date::isValid("31/Dec/01");
die("failed valid test") unless date::isValid("31/Dec/2001");
die("failed valid test") unless date::isValid("12-31-01");
die("failed valid test") unless date::isValid("12-31-2001");
die("failed valid test") unless date::isValid("31-Dec-01");
die("failed valid test") unless date::isValid("31-Dec-2001");
die("failed valid test") unless date::isValid("20011231");
die("failed valid test") unless date::isValid("Dec 31 2001 12:00AM");
# raw time values shouldn't really be considered valid dates
die("raw time considered valid") if date::isValid(time());

# test invalid ones
die("failed invalid test") if date::isValid("bmoogle");
die("failed invalid test") if date::isValid("14/1/01");
die("failed invalid test") if date::isValid("1/42/01");


# test today function
#my $date_cmd = `date +"%-m/%-d/%Y"`;
my $date_cmd = `date +"%Y-%m-%d"`;
chomp $date_cmd;
print "today test: date returned $date_cmd\n" if DEBUG >= 3;
die("today's date is wrong") unless date::today() eq $date_cmd;


# test incDays a bit
die("increment zero test failed") unless
		date::mdy(date::dateTimeSeconds(date::incDays(date::today(), 0)))
				eq date::today();
my $four_days_ago = date::dateTimeSeconds(date::today()) - 4 * 24 * 60 * 60;
my $inc_to_now = date::incDays($four_days_ago, 4);
$inc_to_now = date::mdy(date::dateTimeSeconds($inc_to_now));
unless ($inc_to_now eq date::today())
{
	print "incDays returned $inc_to_now\n" if DEBUG >= 2;
	print "today is ", date::today(), "\n" if DEBUG >= 2;
	die("increment with raw times failed");
}


# test dayDiff a bit
die("day diff test failed") unless
		date::dayDiff(date::incDays(date::today(), -4), date::today()) == 4;
my $raw_diff = date::dayDiff(
		date::dateTimeSeconds(date::incDays(date::today(), -4)),
		date::dateTimeSeconds(date::today()));
print "raw diff is $raw_diff\n" if DEBUG >= 2;
die("day diff with raw times failed") unless $raw_diff == 4;


# other tests
test_period_funcs();


# everything looks good
print "ALL TESTS PASSED\n";


sub test_period_funcs
{
	die("period_num gave wrong answer")
			unless date::period_num('1/1/01', 7) == 1095;
	die("period_num gave wrong answer")
			unless date::period_num('1/1/01', 7, '1/31/1994') == 361;
	die("period_num gave wrong answer")
			unless date::period_num('1/1/01', 14, '1/31/1994') == 180;
	# let's be tricky ... can we specify a default epoch?
	my $output = `

			perl -e '

				use Barefoot::debug;
				use Barefoot::date epoch => "1/31/1994";

				print date::period_num("1/1/01", 7);
			'
	`;
	print STDERR "output was $output\n" if DEBUG >= 2;
	die("setting default option for epoch failed") unless $output == 361;

	die("period_name gave wrong answer")
			unless date::period_name(date::period_num('1/5/5', 7, '1/31/1994'), 7, '1/31/1994') eq '2005-01-03 - 2005-01-09';
}
