#! /usr/bin/perl

use strict;

use Barefoot::date;
use Barefoot::input qw(get_yn input);
use Barefoot::timerdata;


################
#    main()    #
################

my $rows = timerdata::query_results("
		select hours, total_pay,
				convert(char(10), date, 112)
		from pay_amount
	");
die("couldn't access timer database") unless defined($rows);

my $num_rows = @$rows;
my $total_hours = 0;
my $total_pay = 0;
my $min_date = "99999999";
my $max_date = "00000000";
foreach my $row (@$rows)
{
	$total_hours += $row->[0];
	my $pay = $row->[1];
	$pay =~ s/,//g;
	$total_pay += $pay;
	$min_date = $row->[2] if $row->[2] < $min_date;
	$max_date = $row->[2] if $row->[2] > $max_date;
}
print "\nPayroll: $num_rows rows totalling $total_hours hours and "
		. "\$$total_pay total pay\n";
exit 1 unless get_yn("Is this right?");

$min_date =~ /(\d\d\d\d)(\d\d)(\d\d)/;
$min_date = "$2/$3/$1";

$max_date =~ /(\d\d\d\d)(\d\d)(\d\d)/;
$max_date = "$2/$3/$1";

my $from_date = input("\nStart Date:", $min_date);
die("illegal date") unless date::isValid($from_date);
my $to_date = input("End Date:", $max_date);
die("illegal date") unless date::isValid($to_date);
my $check_date = input("Check Date:");
die("illegal date") unless date::isValid($check_date);

my $insert_query = "
	insert payroll
		(period_start, period_end, check_date, create_user, create_date)
	values ('$from_date', '$to_date', '$check_date', '$::ENV{USER}', getdate())
	go

	update time_log
	set payroll_id = pay.payroll_id, chguser = '$::ENV{USER}',
			chgdate = getdate()
	from time_log tl, pay_amount pa, payroll pay
	where tl.log_source = pa.log_source
	and tl.log_id = pa.log_id
	and pay.check_date = '$check_date'
	go
";

timerdata::set_user($::ENV{USER});
my $results = timerdata::run_query("
	begin tran
	go

	$insert_query

	rollback tran
	go
");
die("mark failed <<$results>>") unless
		$results =~ /^\(1 row affected\)\n\($num_rows rows? affected\)/;

print "\nInitial attempt successful for payroll $from_date to $to_date,\n";
print "    check date $check_date, affecting $num_rows rows\n";
exit 1 unless get_yn("Proceed?");

my $results = timerdata::run_query("
	begin tran
	go

	$insert_query

	commit tran
	go
");
die("theoretically impossible error occurred <<$results>>") unless
		$results =~ /^\(1 row affected\)\n\($num_rows rows? affected\)/;
print "\nmark was successful\n";
