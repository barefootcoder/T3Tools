#! /bin/ksh

# For RCS:
# $Date$
# $Log$
# Revision 1.6  1999/02/18 04:02:01  buddy
# fixed too aggressive adjustment of Tim's secretarial hours
# added project type fixups for ILJ
#
# Revision 1.5  1999/01/21 00:50:36  buddy
# made sure valid payroll dates didn't get overwritten (few as they are)
#
# Revision 1.4  1999/01/14 19:51:53  buddy
# client types now moved to project_types
# bproj now combined with project (for easier joins)
# added hardcoded project_type fixups
# added hardcoded project date fixups
# changed log "time" field to "hours", changed "payroll_paid" to "payroll_date",
#     removed extraneous bit fields (now in project_type), added id to create
#     (instead of having separate alter table)
# removed "test" queries
# hardcoded division / 1.5 for Tim's corp sec entries (now patched in bill_rate)
# hardcoded payroll dates for 1998 (so can figure gross profit)
#
# Revision 1.3  1999/01/08 04:46:32  buddy
# now bringing over date invoices and payroll paid
# removed rate table (now in make_rates script)
#
# Revision 1.2  1998/12/31 19:02:47  buddy
# decommented the dbf2sybase line
#
# Revision 1.1  1998/12/17 04:08:25  gregg
# Initial revision
#
# $Id$
# $Revision$

. /usr/local/bin/kshlib

server=SYBASE_1
user=$USER
srcdb=TIMERLOAD
destdb=TIMER

# get the raw data into Sybase
dbf2sybase *.DBF

run_query -S$server -U$user -D$destdb <<-END

	-- bproj

	print "making bproj"
	go

	$(overwrite_table bproj "
		proj				char(3)			NOT NULL,
		name				varchar(30)		NOT NULL,
		category			char(3)			NOT NULL
	")

	insert bproj
	select proj, name, category
	from $srcdb..bproj
	go

	create unique index proj
	on bproj (proj)
	go


	-- phase

	print "making phase"
	go

	$(overwrite_table phase "
		phase				char(3)			NOT NULL,
		name				varchar(30)		NOT NULL
	")

	insert phase
	select code, name
	from $srcdb..phase
	go

	create unique index phase
	on phase (phase)
	go


	-- client					(have to have before can do project)

	print "making client"
	go

	$(overwrite_table client "
		client				char(3)			NOT NULL,
		name				varchar(30)		NOT NULL,
		type				char(1)			NOT NULL,
		rounding			char(1)			NOT NULL,
		tonearest			numeric(3,2)	NOT NULL
	")

	insert client
	select code, name, type, rounding, tonearest
	from $srcdb..client
	where code is not NULL
	go

	create unique index client
	on client (client)
	go


	-- project

	print "making project"
	go

	$(overwrite_table project "
		client				char(3)			NOT NULL,
		proj				char(3)			NOT NULL,
		name				varchar(30)		NOT NULL,
		proj_type			char(1)			NOT NULL,
		start_date			datetime		NOT NULL,
		end_date			datetime		NOT NULL
	")

	insert project
	select p.client, p.code, p.name, c.type,
		isnull(min(p.start_date), $BEGINNING_OF_TIME),
		isnull(max(p.end_date), $END_OF_TIME)
	from $srcdb..project p, $srcdb..client c
	where p.client = c.code
	and c.type != 'I'
	group by p.client, p.code, p.name, c.type
	go

	-- get Barefoot Software projects
	insert project
	select "001", bp.proj, bp.name, "I", $BEGINNING_OF_TIME, $END_OF_TIME
	from bproj bp
	go

	-- repeat for Barefoot non-payable, except don't need
	-- corp. sec. project or vacation time
	insert project
	select "011", bp.proj, bp.name, "i", $BEGINNING_OF_TIME, $END_OF_TIME
	from bproj bp
	where bp.proj not in ("SEC","VAC")
	go

	create unique index proj
	on project (client, proj)
	go

	-- project type fix-ups
		-- IDP
		update project
		set proj_type = "N"
		where client = "002"
		and proj in ("DC", "WEB", "WPC")
		go
		-- DatAsyst
		update project
		set proj_type = "N"
		where client = "003"
		go
		-- Intelligent Decisions
		update project
		set proj_type = "N"
		where client = "004"
		go
		-- Pete Moyer
		update project
		set proj_type = "N"
		where client = "005"
		go
		-- Mortgage Affiliates
		update project
		set proj_type = "N"
		where client = "201"
		go
		-- CBR
		update project
		set proj_type = "N"
		where client = "503"
		and proj = "OSC"
		go
		-- Antrim Beckwith
		update project
		set proj_type = "N"
		where client = "504"
		and proj in ("HDW", "MEM")
		go
		-- Steve's Mowing
		update project
		set proj_type = "N"
		where client = "505"
		and proj = "CON"
		go
		-- Brooks Technologies
		update project
		set proj_type = "N"
		where client = "506"
		and proj in ("QRS", "TS")
		go
		-- Psychiatric Resources
		update project
		set proj_type = "N"
		where client = "508"
		and proj = "NET"
		go
		-- ILJ
		update project
		set proj_type = "R"
		where client = "509"
		and proj in ("GEN","PH1","REP","SPL")
		go
		-- SIMS, Inc.
		update project
		set proj_type = "N"
		where client = "601"
		go
		-- Borland International
		update project
		set proj_type = "C"
		where client = "602"
		go
		-- Generic DTP Customer			(this should probably just be removed)
		update project
		set proj_type = "N"
		where client = "700"
		go
		-- TT Reynold's
		update project
		set proj_type = "N"
		where client = "701"
		go
		-- VBH
		update project
		set proj_type = "D"
		where client = "801"
		and proj = "CLO"
		go
		update project
		set proj_type = "T"
		where client = "801"
		and proj = "SR"
		go
		-- Mike Avenick
		delete project
		where client = "901"
		and proj like "UN%"
		go
	
	-- project date fixups
		-- Borland
		update project
		set end_date = "6/21/1998"
		where client = "602"
		and proj = "OLR"
		go


	-- employee

	print "making employee"
	go

	$(overwrite_table employee "
		emp					char(3)			NOT NULL,
		name				varchar(15)		NOT NULL,
		lname				varchar(15)		NOT NULL,
		showlast			bit				NOT NULL,
		login				varchar(30)		NULL,
		defclient			char(3)			NOT NULL,
	")

	use $srcdb
	go
	$(overwrite_table emp_maxdates "
		id					char(3)			NOT NULL,
		maxdate				datetime		NOT NULL
	")
	insert emp_maxdates
	select id, max(end_date)
	from employee
	group by id
	go
	use $destdb
	go

	insert employee
	select e.id, name, lastname, isnull(showlast, 0), username, def_client
	from $srcdb..employee e, $srcdb..emp_maxdates emd
	where e.id = emd.id
	and e.end_date = emd.maxdate
	go

	create unique index employee
	on employee (emp)
	go


	-- log

	print "making log"
	go

	$(overwrite_table log "
		id					numeric(6,0)	identity,
		emp					char(3)			NOT NULL,
		client				char(3)			NOT NULL,
		proj				char(3)			NOT NULL,
		phase				char(3)			NULL,
		cliproj				varchar(10)		NULL,
		date				datetime		NOT NULL,
		hours				numeric(5,2)	NOT NULL,
		comments			varchar(255)	NULL,
		invoice_num			char(7)			NULL,
		invoice_paydate		datetime		NULL,
		payroll_date		datetime		NULL,
		sales_comm_paydate	smalldatetime	NULL,
		ref_comm_paydate	smalldatetime	NULL,
		admin_comm_paydate	smalldatetime	NULL,
		chguser				varchar(20)		NOT NULL,
		chgdate				datetime		NOT NULL
	")

	insert log
		(emp, client, proj, phase, cliproj, date, hours, comments,
				invoice_num, invoice_paydate, payroll_date, chguser, chgdate)
	select empcode, client, proj, phase, cliproj, date, time, comments,
		invoice, paid, payroll, isnull(chguser, "UNKNOWN"),
		isnull(chgdate, $SMALL_BEGINNING_OF_TIME)
	from $srcdb..log
	where proj is not NULL
	go

	checkpoint
	go

	update log
	set invoice_num = NULL
	from log l, project p, project_type pt
	where l.client = p.client
	and l.proj = p.proj
	and p.proj_type = pt.proj_type
	and pt.requires_billing = 0
	go

	create unique clustered index id
	on log (id)
	go

	print "fixing Tim's SEC log entries"
	go
	update log
	set hours = convert(numeric(4,2), hours / 1.5)
	where emp = "119"
	and client = "001"
	and proj = "SEC"
	and date < "1/1/1999"
	go
	
	print "fixing payroll dates for 1998"
	go
	declare @payroll_start datetime, @payroll_end datetime
	select @payroll_start = "12/15/1997"
	select @payroll_end = dateadd(day, 13, @payroll_start)
	while @payroll_start < "12/14/1998"
	begin
		update log
		set payroll_date = dateadd(day, 15, @payroll_end)
		where date between @payroll_start and @payroll_end
		and payroll_date = $BEGINNING_OF_TIME
		
		select @payroll_start = dateadd(day, 1, @payroll_end)
		select @payroll_end = dateadd(day, 13, @payroll_start)
	end
	go

END
