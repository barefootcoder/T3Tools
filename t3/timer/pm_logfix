#! /usr/bin/perl

use strict;

#use Barefoot::debug;

use Barefoot::base;
use Barefoot::date;
use Barefoot::DataStore;
use Barefoot::input qw(get_yn input);


################
#    main()    #
################

my $log_id = $ARGV[0];
$log_id = input("Time log ID:") unless defined($log_id);

my $t3 = DataStore->open(DEBUG ? "t3test" : "T3", $ENV{USER});

my $res = $t3->do("

		select pe.first_name, tl.client_id, c.name, tl.proj_id, tl.phase_id,
				tl.tracking_code, tl.log_date, tl.hours
		from {~timer}.time_log tl, {~timer}.employee e, {~t3}.person pe,
				{~timer}.client c
		where tl.log_id = $log_id
		and tl.emp_id = e.emp_id
		and e.person_id = pe.person_id
		and tl.client_id = c.client_id

");
die("database error: ", $t3->last_error()) unless $res and $res->next_row();

print defined $res->col($_) ? $res->col($_) : "<<NULL>>", ":"
		foreach 0..($res->num_cols()-1); print "\n";

my ($employee, $client, $client_name, $proj, $phase, $tracking,
		$date, $hours) = $res->all_cols();
my $date = date::mdy(date::dateTimeSeconds($date));

$res->next_row();		# finish up pending query

print "\nTime log for employee $employee, client $client_name, "
		. "proj $proj,\n    phase $phase, tracking $tracking, date $date, "
		. "hours $hours\n";
exit 1 unless get_yn("Is this right?");

$client = input("New client?", $client);
$proj = input("New proj?", $proj);
$phase = input("New phase?", $phase ? $phase : '');
$tracking = input("New tracking code?", $tracking ? $tracking : '');
$date = input("New date?", $date);
$hours = input("New number of hours?", $hours);
die("illegal date") unless date::isValid($date);

$proj = uc($proj);
$phase = $phase ? "'" . uc($phase) . "'" : "NULL";
$tracking = $tracking ? "'" . uc($tracking) . "'" : "NULL";

my $update_query = <<END;

	update time_log
	set client = '$client', proj = '$proj', phase = $phase,
			tracking = $tracking, date = '$date', hours = $hours,
			chguser = '$::ENV{USER}', chgdate = getdate()
	where log_id = $log_id

END

$t3->begin_tran();
$res = $t3->do($update_query);
die("database error: ", $t3->last_error())
		unless $res and $res->rows_affected() == 1;
$t3->rollback();

print "\nInitial attempt successful for employee $employee, client $client,\n";
print "    new proj $proj, new phase $phase, new tracking $tracking\n";
exit 1 unless get_yn("Proceed?");

$t3->begin_tran();
$res = $t3->do($update_query);
die("database error: ", $t3->last_error())
		unless $res and $res->rows_affected() == 1;
$t3->commit();

print "\nmark was successful\n";
