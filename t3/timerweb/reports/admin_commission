-- SORT GROUP: Commission Reports
-- TITLE: Administrative Commission

print ""
print ""
print "<H3>Period from [start_date] to [end_date]</H3>"
print ""
print ""
go

set nocount on
go


$(build_profit_item "
	log.date <= '[end_date]'
	and not exists
	(
		select 1
		from commission com
		where log.log_source = com.log_source
		and log.log_id = com.log_id
		and com.comm_type = 'A'
	)
")

calc_profit
go

-- for debugging
/*
select log_source, client, proj, convert(char(10), end_date, 101) "date",
	units, convert(numeric(6,2), price_per_unit) "billrate",
	convert(numeric(6,2), total_price) "amt_billed",
	convert(numeric(6,2), sales_commission) "salescomm",
	convert(numeric(6,2), ref_commission) "refcomm",
	convert(numeric(6,2), total_cost) "amt_paid",
	convert(numeric(6,2), emp_commission) "empcomm"
from profit_item
order by client, proj, date
*/
go

select c.name "client", pi.proj, sum(pi.units) "units",
		sum(pi.total_price) "total_price",
		sum(pi.sales_commission) "sales_comm",
		sum(pi.ref_commission) "ref_comm",
		sum(pi.total_cost) "total_cost",
		sum(pi.emp_commission) "emp_comm",
		sum(pi.simple_profit) "simple_profit",
		convert(numeric(4,2), NULL) "margin"
into #profits
from profit_item pi, client c
where pi.client = c.client
group by c.name, pi.proj
go

update #profits
set margin = convert(numeric(4,2), 100.0 * simple_profit / total_price)
where simple_profit > 0
and total_price > simple_profit
go

select convert(char(25), client) "client", isnull(proj, '') "proj",
		convert(numeric(6,2), units) "units",
		convert(char(10), total_price, 1) "amt billed",
		convert(char(8), sales_comm, 1) "sls comm",
		convert(char(8), ref_comm, 1) "ref comm",
		convert(char(10), total_cost, 1) "amt paid",
		convert(char(8), emp_comm, 1) "emp comm",
		convert(char(10), simple_profit, 1) "simp prof", margin
from #profits
order by client, proj
go

select convert(char(13), sum(total_price), 1) "gross sales",
		convert(char(13), sum(total_cost), 1) "COGS",
		convert(char(13), sum(sales_commission), 1) "sales comm",
		convert(char(13), sum(ref_commission), 1) "ref comm",
		convert(char(13), sum(emp_commission), 1) "emp comm",
		convert(char(13), sum(sales_commission + ref_commission
				+ emp_commission), 1) "total comms",
		convert(char(13), sum(simple_profit), 1) "simple profit"
from profit_item
go

print ""
print ""
go

select sum(pi.simple_profit) "simple_profit", act.name "comm_name",
		act.sort_order, ac.pay_type, ac.pay_to,
		convert(varchar(30), NULL) "pay_name", ac.commission_percent,
		ac.start_date, ac.end_date, convert(money, NULL) "amount"
into #admin_comm_amount
from profit_item pi, admin_commission ac, admin_commission_type act
where pi.end_date between ac.start_date and ac.end_date
and ac.admin_comm = act.admin_comm
group by act.name, act.sort_order, ac.pay_type, ac.pay_to,
		ac.commission_percent, ac.start_date, ac.end_date
go

update #admin_comm_amount
set pay_name = s.name
from #admin_comm_amount aca, salesman s
where aca.pay_type = 'S'
and aca.pay_to = s.salesman
go

update #admin_comm_amount
set pay_name = $(employee_name e)
from #admin_comm_amount aca, employee e
where aca.pay_type = 'E'
and aca.pay_to = e.emp
go

update #admin_comm_amount
set amount = simple_profit * commission_percent / 100
go

update #admin_comm_amount
set end_date = '[end_date]'
where end_date > '[end_date]'
go

select comm_name "commission", pay_name "paid to",
		convert(char(10), end_date, 101) "until",
		convert(numeric(8,2), simple_profit) "simple profit",
		commission_percent "percentage",
		convert(numeric(7,2), amount) "amount"
from #admin_comm_amount
order by sort_order, start_date
--compute sum(convert(numeric(7,2), ac.amount * @total_simple_profit / 100))
go

select pay_name "paid to", sum(amount) "total amount"
from #admin_comm_amount
group by pay_name
compute sum(sum(amount))
go
