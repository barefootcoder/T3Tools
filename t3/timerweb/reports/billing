# SORT GROUP: Financial Reports
# TITLE: Billing Report

&proc build_profit_item

		log.client_id = '{client}'
	{if proj}
		and log.proj_id = '{proj}'
	{endif}

	{if invoice}
		and exists
		(
			select 1
			from {~timer}.invoice i
			where log.invoice_id = i.invoice_id
			and i.invoice_number = '{invoice}'
		)
	{endif}

	{if !invoice}
		and log.log_date <= '{end_date}'
		and log.invoice_id is NULL
	{endif}

;

	select tlp.emp_id as EMP, pe.first_name as Employee, tlp.client_id as CLI,
			c.name as Client, tlp.proj_id as PRJ, tlp.log_date, tlp.hours
	from {~reporting}.time_log_profit tlp, {~timer}.employee e,
			{~t3}.person pe, {~timer}.client c
	where tlp.bill_rate is NULL
	and tlp.emp_id = e.emp_id
	and e.person_id = pe.person_id
	and tlp.client_id = c.client_id
->suppress_empty
->format
	H=>
	H=><H1>ERROR! These entries have no billing rates:</H1>
	H=>
	H=>%default
	B->@<< @<x20 @<< @<x30 @<< @<x11 @##.##
	F=>(%R rows returned)
;


&print


<CENTER><H2>Client: {client}
{if proj}
</H2><H3>Project: {proj}
{endif}
</H3>From {start_date} to {end_date}</CENTER>


;

	select p.name as project, pi.price_per_unit as rate,
			sum(pi.units) as hours, sum(pi.total_price) as "total amount"
	from {~reporting}.profit_item pi, {~reporting}.time_log_profit tlp,
			{~timer}.project p
	where pi.log_source = tlp.log_source
	and pi.log_id = tlp.log_id
	and tlp.resource_billing = 0
	and tlp.class_billing = 0
	and pi.client_id = p.client_id
	and pi.proj_id = p.proj_id
	and pi.end_date between p.start_date and p.end_date
	group by p.name, pi.price_per_unit
	order by p.name
	# compute sum(sum(pi.total_price))

->suppress_empty
->format

	H-> @<<<<<<<<<<<<<<<<<<<<<<<<<<<<< @<<<<<< @<<<<< @<<<<<<<<<<<
	H-> ------------------------------ ------- ------ ============

	B-> @<<<<<<<<<<<<<<<<<<<<<<<<<<<<< @###.## @##.##     @####.##
;


	select rr.resource_name as resource, pi.price_per_unit as rate,
			sum(pi.units) as hours, sum(pi.total_price) as "total amount"
	from {~reporting}.profit_item pi, {~reporting}.time_log_profit tlp,
			{~timer}.resource_rate rr, {~timer}.resource_employee re
	where pi.log_source = tlp.log_source
	and pi.log_id = tlp.log_id
	and tlp.resource_billing = 1
	and tlp.class_billing = 0
	and tlp.emp_id = re.emp_id
	and
	(
		tlp.phase_id = re.phase_id
		or
		(
			re.phase_id is NULL
			and not exists
			(
				select 1
				from {~timer}.resource_employee re2
				where tlp.client_id = re2.client_id
				and tlp.emp_id = re2.emp_id
				and tlp.phase_id = re2.phase_id
				and tlp.log_date between re2.start_date and re2.end_date
			)
		)
	)
	and tlp.client_id = re.client_id
	and tlp.log_date between re.start_date and re.end_date
	and re.resource_id = rr.resource_id
	and re.client_id = rr.client_id
	and tlp.log_date between rr.start_date and rr.end_date
	group by rr.resource_name, pi.price_per_unit
	order by pi.price_per_unit desc, rr.resource_name
	# compute sum(sum(pi.total_price))

->suppress_empty
->format

	H-> @<<<<<<<<<<<<<<<<<<<<<<<<<<<<< @<<<<<< @<<<<< @<<<<<<<<<<<
	H-> ------------------------------ ------- ------ ============

	B-> @<<<<<<<<<<<<<<<<<<<<<<<<<<<<< @###.## @##.##     @####.##
;


	select {&ifnull p.name, '**No Project Assigned**'} as project,
			pi.end_date as date, pi.price_per_unit as "price/unit",
			pi.units as units, pi.total_price as "total amount"
	from {~reporting}.profit_item pi, {~timer}.project p
	where pi.client_id = p.client_id
	and pi.proj_id = p.proj_id
	and pi.end_date between p.start_date and p.end_date
	and not exists
	(
		select 1
		from {~reporting}.time_log_profit tlp
		where pi.log_source = tlp.log_source
		and pi.log_id = tlp.log_id
		and tlp.class_billing = 0
	)

->suppress_empty
->format

	H-> @<<<<<<<<<<<<<<<<<<<<<<<<<<<<< @<<<<<< @<<<<< @<<<<<<<<<<<
	H-> ------------------------------ ------- ------ ============

	B-> @<<<<<<<<<<<<<<<<<<<<<<<<<<<<< @###.## @##.##     @####.##
;


	select p.name as project, ct.name as "client's tracking code",
			sum(tlp.hours) as hours, sum(pi.total_price) as "total amount"
	from {~reporting}.profit_item pi, {~reporting}.time_log_profit tlp,
			{~timer}.time_log tl, {~timer}.project p,
			{~timer}.client_tracking ct
	where pi.log_source = tlp.log_source
	and pi.log_id = tlp.log_id
	and tlp.log_id = tl.log_id
	and tl.client_id = p.client_id
	and tl.proj_id = p.proj_id
	and tl.log_date between p.start_date and p.end_date
	and tl.client_id = ct.client_id
	and tl.tracking_code = ct.tracking_code
	group by p.name, ct.name
	order by p.name, ct.name
	# compute sum(sum(pi.total_price)) by p.name

->suppress_empty
->format

	H-> @<<<<<<<<<<<<<<<<<<<<<<<<<<<<< @<<<<<< @<<<<< @<<<<<<<<<<<
	H-> ------------------------------ ------- ------ ============

	B-> @<<<<<<<<<<<<<<<<<<<<<<<<<<<<< @###.## @##.##     @####.##
;
