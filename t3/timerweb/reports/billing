-- SORT GROUP: Financial Reports
-- TITLE: Billing Report

$(build_profit_item "
	log.client = '[client]'
	and log.proj = '[proj]'									??proj

	and exists												??invoice
	(														??invoice
		select 1											??invoice
		from invoice i										??invoice
		where log.invoice_id = i.invoice_id					??invoice
		and i.invoice_number = '[invoice]'					??invoice
	)														??invoice

	and log.date <= '[end_date]'							?!invoice
	and log.invoice_id is NULL								?!invoice
")
exec calc_total_price
go

-- for debugging
/*
select pi.log_source, pi.log_id, tpl.emp, pi.client, pi.proj,
	convert(char(10), pi.end_date, 101) "date", units,
	convert(char(8), price_per_unit, 1) "price_per_unit",
	convert(char(9), total_price, 1) "total_price"
from profit_item pi, time_log_profit tpl
where pi.log_source *= tpl.log_source
and pi.log_id *= tpl.log_id
order by tpl.emp, pi.client, pi.proj, pi.end_date
*/
go

print "<H1>ERROR! These entries have no billing rates:</H1>"
print ""
select tlp.emp "E", $(employee_name e) "Employee", tlp.client "C",
		c.name "Client", tlp.proj, convert(char(10), tlp.date, 101) "date",
		tlp.hours
from time_log_profit tlp, employee e, client c
where tlp.bill_rate is NULL
and tlp.emp = e.emp
and tlp.client = c.client
go

print ""
print ""
set nocount on
go

select c.name "Client",
		convert(char(10), min(pi.start_date), 101) "From",
		convert(char(10), max(pi.end_date), 101) "To"
from profit_item pi, client c
where pi.client = c.client
group by c.name
go

if exists
(
	select 1
	from profit_item pi, time_log_profit tlp
	where pi.log_source = tlp.log_source
	and pi.log_id = tlp.log_id
	and tlp.resource_billing = 0
	and tlp.class_billing = 0
)
	select p.name "project",
			convert(char(8), pi.price_per_unit, 1) "rate",
			convert(numeric(6,2), sum(pi.units)) "hours",
			sum(pi.total_price) "total amount"
	from profit_item pi, time_log_profit tlp, project p
	where pi.log_source = tlp.log_source
	and pi.log_id = tlp.log_id
	and tlp.resource_billing = 0
	and tlp.class_billing = 0
	and pi.client = p.client
	and pi.proj = p.proj
	and pi.end_date between p.start_date and p.end_date
	group by p.name, pi.price_per_unit
	order by p.name
	compute sum(sum(pi.total_price))
go

if exists
(
	select 1
	from profit_item pi, time_log_profit tlp
	where pi.log_source = tlp.log_source
	and pi.log_id = tlp.log_id
	and tlp.resource_billing = 1
	and tlp.class_billing = 0
)
	select rr.resource_name "resource",
			convert(char(8), pi.price_per_unit, 1) "rate",
			convert(numeric(6,2), sum(pi.units)) "hours",
			sum(pi.total_price) "total amount"
	from profit_item pi, time_log_profit tlp,
			resource_rate rr, resource_employee re
	where pi.log_source = tlp.log_source
	and pi.log_id = tlp.log_id
	and tlp.resource_billing = 1
	and tlp.class_billing = 0
	and tlp.emp = re.emp
	and tlp.client = re.client
	and tlp.date between re.start_date and re.end_date
	and re.resrc = rr.resrc
	and re.client = rr.client
	and tlp.date between rr.start_date and rr.end_date
	group by rr.resource_name, pi.price_per_unit
	order by pi.price_per_unit desc, rr.resource_name
	compute sum(sum(pi.total_price))
go

if exists
(
	select 1
	from profit_item pi
	where not exists
	(
		select 1
		from time_log_profit tlp
		where pi.log_source = tlp.log_source
		and pi.log_id = tlp.log_id
		and tlp.class_billing = 0
	)
)
	select isnull(p.name, "**No Project Assigned**") "project",
			convert(char(10), pi.end_date, 101) "date",
			convert(char(8), pi.price_per_unit, 1) "price/unit",
			convert(numeric(6,2), pi.units) "units",
			convert(char(10), pi.total_price, 1) "total amount"
	from profit_item pi, project p
	where pi.client = p.client
	and pi.proj = p.proj
	and pi.end_date between p.start_date and p.end_date
	and not exists
	(
		select 1
		from time_log_profit tlp
		where pi.log_source = tlp.log_source
		and pi.log_id = tlp.log_id
		and tlp.class_billing = 0
	)
go
