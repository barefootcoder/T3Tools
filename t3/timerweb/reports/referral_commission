-- SORT GROUP: Commission Reports
-- TITLE: Referral Commission

print "Period from [start_date] to [end_date]"
print ""
print ""
go

-- in order to speed things up a bit, let's figure out all the projects
-- ever worked on by any employee on whom was paid referral commission
-- during the time for which they were supposed to be paid
-- we can also eliminate all the non-billable logs (no comm on those)
select distinct tl.client, tl.proj
into #ref_comm_projs
from time_log tl, referral_commission rc, project p, project_type pt
where tl.emp = rc.emp
and tl.date between rc.start_date and rc.end_date
and tl.client = p.client
and tl.proj = p.proj
and p.proj_type = pt.proj_type
and pt.requires_billing = 1
go

$(build_profit_item "
	exists
	(
		select 1
		from #ref_comm_projs rcp
		where log.client = rcp.client
		and log.proj = rcp.proj
	)
	and exists
	(
		select 1
		from invoice i
		where log.invoice_id = i.invoice_id
		and i.invoice_paydate < '[end_date]'
	)
	and not exists
	(
		select 1
		from log_commission lc, commission com
		where log.log_source = lc.log_source
		and log.log_id = lc.log_id
		and lc.commission_id = com.commission_id
		and com.comm_type = 'R'
	)
")
go

calc_total_price
go
calc_referral_commission
go

-- for debugging
/*
select emp, client, proj, convert(char(10), end_date, 101) "date", units,
		rca.hours, convert(numeric(6,2), price_per_unit) "price / unit",
		convert(numeric(6,2), rca.amount) "ref comm"
from profit_item pi, referral_comm_amount rca
where pi.profit_id = rca.profit_id
order by emp, client, proj, date
*/
go

-- now for the actual report
select substring(rca.name, 1, 20) "pay to",
		substring($(employee_name e), 1, 20) "employee",
		substring(c.name, 1, 20) "client",
		convert(numeric(5,2), sum(rca.hours)) "hours",
		sum(rca.amount) "total referral comm"
from profit_item pi, referral_comm_amount rca, employee e, client c
where pi.profit_id = rca.profit_id
and rca.emp = e.emp
and pi.client = c.client
group by rca.name, $(employee_name e), c.name
order by rca.name, $(employee_name e), c.name
compute sum(sum(rca.amount))
	by rca.name
compute sum(sum(rca.amount))
go
